type Account @entity {
  id: ID!
  tokensOwned: [Token!]! @derivedFrom(field: "owner")
  numTokensOwned: BigInt!

  tokensSent: [Token!]! @derivedFrom(field: "drawer")
  numTokensSent: BigInt!
  
  tokensReceived: [Token!]! @derivedFrom(field: "recipient")
  numTokensReceived: BigInt!
}
type Broker @entity {
  id: ID!
  tokensManaged: [Token!]! @derivedFrom(field: "broker")
  numTokensManaged: BigInt!
}
type Token @entity {
  id: ID!
  createdAt: BigInt!
  ercToken: ERC20!
  amount: BigInt!

  escrowed: BigInt!
  
  drawer: Account!
  recipient: Account!
  broker: Broker!
  
  owner: Account!
  
  transactionHash: String!
}
type Ownership @entity(immutable: true) {
  id: ID!
  timestamp: BigInt!
  tokenId: BigInt!
  from: Account!
  to: Account!
}
type Escrow @entity(immutable: true) {
  id: ID!
  timestamp: BigInt!
  tokenId: BigInt!
  caller: Account!
  amount: BigInt!
}

type ERC20 @entity(immutable: true) {
  id: ID!
}